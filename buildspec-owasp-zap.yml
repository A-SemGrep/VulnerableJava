version: 0.2
phases:
  install:
    commands:
      - echo "install phase....."
  pre_build:
    commands:
      - wget https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.tar.gz
      - tar xvzf ZAP_2.14.0_Linux.tar.gz ZAP_2.14.0/
      - cd ZAP_2.14.0/
      - chmod +x ./zap.sh
      - JAR_NAME=$(basename /home/ec2-user/build/webgoat-2023.6-SNAPSHOT.jar)
      - DEPLOY_JAR=/home/ec2user/build/$JAR_NAME
        echo "OWASP Zap analysis status is completed..."; 
  build:
    commands: 
      - nohup java -jar "$DEPLOY_JAR" --server.port=8080 --server.address=43.200.16.60 > /dev/null 2> /dev/null < /dev/null &
      - ./zap.sh -cmd -quickurl http://localhost:8080/WebGoat/ -quickout zap-scan-reports.json -quickprogress
      - echo "build stage completed"
      - high_alerts=$( cat zap-scan-reports.json | jq -r '.alertsSummary.High')
      - medium_alerts=$( cat zap-scan-reports.json | jq -r '.alertsSummary.Medium')
  post_build:
    commands:
      - | 
        jq "{ \"messageType\": \"CodeScanReport\", \"reportType\": \"OWASP-Zap\", \
        \"createdAt\": $(date +\"%Y-%m-%dT%H:%M:%S.%3NZ\"), \"source_repository\": \"$CODEBUILD_SOURCE_REPO_URL\", \
        \"source_branch\": \"$CODEBUILD_SOURCE_VERSION\", \
        \"build_id\": \"$CODEBUILD_BUILD_ID\", \
        \"source_commitid\": \"$CODEBUILD_RESOLVED_SOURCE_VERSION\", \
        \"report\": . }" zap-scan-results.json > payload.json
      # if [ $high_alerts -gt 0 ] || [ $medium_alerts -gt 0 ]; then echo "there are high or medium alerts.. failing the build" && exit 1;
artifacts:
  files: s3://codebuild-test-hbucket/*.json
