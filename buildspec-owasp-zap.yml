version: 0.2

phases:
  source:
    type: S3
    location: s3://codebuild-test-hbucket/reports
    buildspec: buildspec-owasp-zap.yml
  install:
    commands:
      - echo "install phase....."
  pre_build:
    commands:
      - wget https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.tar.gz
      - tar -xzf ZAP_2.14.0_Linux.tar.gz
      - sudo mv ZAP_2.13.0 /usr/ec2-user/build
      - chmod -R 775 $CODEBUILD_SRC_DIR/owasp-zap/bin/owasp-zap.sh
      - echo "stage pre_build completed"
  build:
    commands: 
      - cd owasp-zap/bin
      - $CODEBUILD_SRC_DIR/owasp-zap/bin/owasp-zap.sh --project "webgoat" --format JSON --prettyPrint --enableExperimental --scan $CODEBUILD_SRC_DIR --exclude '$CODEBUILD_SRC_DIR/owasp-zap/'
      - echo "OWASP ZAP analysis status is completed..."; 
      - high_risk_dependency=$( cat owasp-zap-report.json | grep -c "HIGHEST" )
  post_build:
    commands:
      - |
        jq "{ \"messageType\": \"CodeScanReport\", \"reportType\": \"OWASP-Dependency-Check\", \
        \"createdAt\": $(date +\"%Y-%m-%dT%H:%M:%S.%3NZ\"), \"source_repository\": env.CODEBUILD_SOURCE_REPO_URL, \
        \"source_branch\": env.CODEBUILD_SOURCE_VERSION, \
        \"build_id\": env.CODEBUILD_BUILD_ID, \
        \"source_commitid\": env.CODEBUILD_RESOLVED_SOURCE_VERSION, \
        \"report\": . }" owasp-zap-report.json > payload.json
      - pwd && ls && whoami
      - |
        if [[ $high_risk_dependency -gt 0 ]]; then
          echo "there are high or medium alerts.. failing the build"
          exit 1; 
        fi
artifacts:
  files: $CODEBUILD_SRC_DIR/owasp-zap/bin/*.json

# aws lambda invoke --function-name ImportVulToSecurityHub --payload file://payload.json owaspzap_scan_report.json && echo "LAMBDA_SUCCEDED" || echo "LAMBDA_FAILED";

