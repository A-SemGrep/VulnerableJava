name: "Push build"
on:
  push:
    branches:
      - '*'

jobs:
  push-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn --no-transfer-progress verify

      - name: Set up QEMU (Linux only)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2.2.0

      - name: Set up Docker Buildx (Linux only)
        if: runner.os == 'Linux'
        uses: docker/setup-buildx-action@v2

      - name: Verify Docker WebGoat build (Linux only)
        if: runner.os == 'Linux'
        uses: docker/build-push-action@v4.1.1
        with:
          context: ./
          file: ./Dockerfile
          push: false
          build-args: |
            webgoat_version=${{ env.WEBGOAT_MAVEN_VERSION }}

      - name: Verify Docker WebGoat desktop build (Linux only)
        uses: docker/build-push-action@v4.1.1
        if: runner.os == 'Linux'
        with:
          context: ./
          file: ./Dockerfile_desktop
          push: false
          build-args: |
            webgoat_version=${{ env.WEBGOAT_MAVEN_VERSION }}

    - name: Set up Docker (for Windows and macOS)
      if: runner.os == 'windows-latest' || runner.os == 'macos-latest'
      uses: actions/setup-docker@v2
      with:
        docker-version: '20.10.8'  # Specify the desired Docker version

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: yjdocker0411/my-webgoat
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
